@model PassportGenerationSystem.Models.Application

@{
    ViewData["Title"] = "EditApplication";
}
@{
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}
<h1>EditApplication</h1>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}
<style>
    h1, .row {
        padding-left: 60px;
    }

    .form-group, .form-control {
        padding-bottom: 20px;
    }

</style>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="AdminEditApplication" form method="post" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input asp-for="AppID" type="hidden" />


            <div class="form-group">
                <label asp-for="FirstName" class="control-label"></label>
                <input asp-for="FirstName" class="form-control" />
                <span asp-validation-for="FirstName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="LastName" class="control-label"></label>
                <input asp-for="LastName" class="form-control" />
                <span asp-validation-for="LastName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DateOfBirth" class="control-label"></label>
                <input asp-for="DateOfBirth" class="form-control" type="date" />
                <span asp-validation-for="DateOfBirth" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Gender" class="control-label"></label>
                <div>
                    <input asp-for="Gender" type="radio" value="Male" id="Male" />
                    <label for="Male">Male</label>
                    <input asp-for="Gender" type="radio" value="Female" id="Female" />
                    <label for="Female">Female</label>
                    <input asp-for="Gender" type="radio" value="Other" id="Other" />
                    <label for="Other">Other</label>
                </div>
                <span asp-validation-for="Gender" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PhoneNumber" class="control-label"></label>
                <input asp-for="PhoneNumber" class="form-control" />
                <span asp-validation-for="PhoneNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Address" class="control-label"></label>
                <input asp-for="Address" class="form-control" />
                <span asp-validation-for="Address" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Nationality" class="control-label"></label>
                <div>
                    <input type="radio" name="Nationality" value="By Birth" id="ByBirth" required />
                    <label for="ByBirth">By Birth</label>
                    <input type="radio" name="Nationality" value="By Descent" id="ByDescent" required />
                    <label for="ByDescent">By Descent</label>
                    <input type="radio" name="Nationality" value="Naturalization" id="Naturalization" required />
                    <label for="Naturalization">Naturalization</label>
                </div>
                <span asp-validation-for="Nationality" class="text-danger"></span>
            </div>
            <div>
                <label asp-for="State" class="control-label"></label>
                <select asp-for="State" class="form-control" id="stateDropdown">
                    <option value="">Select State</option>
                    <option value="Kerala">Kerala</option>
                    <option value="Tamil Nadu">Tamil Nadu</option>
                    <option value="Karnataka">Karnataka</option>
                </select>
                <span asp-validation-for="State" class="text-danger"></span>
            </div>
            <div>
                <label asp-for="City" class="control-label"></label>
                <select asp-for="City" class="form-control" id="cityDropdown">
                    <option value="">Select City</option>
                </select>
                <span asp-validation-for="City" class="text-danger"></span>
            </div>

            <div class="form-control">
                <label>Upload New Photo</label>
                <input type="file" name="Photo" class="form-control" />
                <span asp-validation-for="PhotoBase64" class="text-danger"></span>
                @if (!string.IsNullOrEmpty(Model.PhotoBase64))
                {
                    <img src="data:image/png;base64,@Model.PhotoBase64" alt="Current Photo" style="max-width: 150px;" />
                }

            </div>

            <div class="form-control">
                <label>Upload New Document</label>
                <input type="file" name="Document" class="form-control" />
                <span asp-validation-for="DocumentBase64" class="text-danger"></span>
                @if (!string.IsNullOrEmpty(Model.DocumentBase64))
                {
                    <a href="data:application/pdf;base64,@Model.DocumentBase64" target="_blank">View Current Document</a>
                }
            </div>




            <div class="form-group">
                <label asp-for="GuardianName" class="control-label"></label>
                <input asp-for="GuardianName" class="form-control" />
                <span asp-validation-for="GuardianName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label>Marital Status</label>
                <div>
                    <input type="radio" name="MaritalStatus" value="Single" id="Single" required />
                    <label for="Single">Single</label>
                    <input type="radio" name="MaritalStatus" value="Married" id="Married" required />
                    <label for="Married">Married</label>
                    <input type="radio" name="MaritalStatus" value="Widowed" id="Widowed" required />
                    <label for="Widowed">Widowed</label>
                </div>
                <span asp-validation-for="MaritalStatus" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Status" class="control-label"></label>
                <input asp-for="Status" class="form-control" readonly />
                <span asp-validation-for="Status" class="text-danger"></span>
            </div>



            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>


<script>
    document.getElementById("stateDropdown").addEventListener("change", function () {
        const state = this.value;
        const cityDropdown = document.getElementById("cityDropdown");

        // Clear existing options in the cities dropdown
        cityDropdown.innerHTML = '<option value="">Select City</option>';

        // Define cities for each state
        const citiesByState = {
            "Kerala": ["Thiruvananthapuram", "Kochi", "Kozhikode"],
            "Tamil Nadu": ["Chennai", "Coimbatore", "Madurai"],
            "Karnataka": ["Bengaluru", "Mysuru", "Mangalore"]
        };

        // Populate the cities dropdown if the selected state exists
        if (citiesByState[state]) {
            citiesByState[state].forEach(city => {
                const option = document.createElement("option");
                option.value = city;
                option.textContent = city;
                cityDropdown.appendChild(option);
            });
        }
    });

    // Pre-select state and city if already available in the model
    window.addEventListener("DOMContentLoaded", function () {
        const selectedState = "@Model.State";
        const selectedCity = "@Model.City";

        // Set the state dropdown value
        const stateDropdown = document.getElementById("stateDropdown");
        if (selectedState) {
            stateDropdown.value = selectedState;

            // Trigger the change event to populate cities
            stateDropdown.dispatchEvent(new Event("change"));

            // Set the city dropdown value
            const cityDropdown = document.getElementById("cityDropdown");
            if (selectedCity) {
                cityDropdown.value = selectedCity;
            }
        }
    });

    window.setTimeout(function () {
        const alerts = document.querySelectorAll(".alert");
        alerts.forEach(alert => {
            alert.style.transition = "opacity 0.5s ease-out";
            alert.style.opacity = 0;
            setTimeout(() => alert.remove(), 500);
        });
    }, 5000);
</script>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
